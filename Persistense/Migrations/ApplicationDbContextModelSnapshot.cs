// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.Persistense.DATA;

#nullable disable

namespace ToDoList.Persistense.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ToDiList.Domain.Model.Security.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConfirmedEmail")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("ConfirmedPhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeedUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NormalizeEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizeUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.ApplicationTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DoDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GroupTaskId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StepsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupTaskId");

                    b.HasIndex("SectionId");

                    b.HasIndex("StepsId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.GroupTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GroupTasks");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.ApplicationTask", b =>
                {
                    b.HasOne("ToDiList.Domain.Model.System.GroupTask", "GroupTask")
                        .WithMany("Tasks")
                        .HasForeignKey("GroupTaskId");

                    b.HasOne("ToDiList.Domain.Model.System.Section", "Section")
                        .WithMany("Tasks")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToDiList.Domain.Model.System.ApplicationTask", "Steps")
                        .WithMany()
                        .HasForeignKey("StepsId");

                    b.Navigation("GroupTask");

                    b.Navigation("Section");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.Section", b =>
                {
                    b.HasOne("ToDiList.Domain.Model.Security.ApplicationUser", "User")
                        .WithMany("Section")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.Security.ApplicationUser", b =>
                {
                    b.Navigation("Section");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.GroupTask", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ToDiList.Domain.Model.System.Section", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
